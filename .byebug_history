c
fake_instance.search_repo('x')
fake_instance.search_repo
n
c
file_name
filename
client.contents(repo_id)
client.contents(repo_id, :path => file_name)
repo_id
client
s
fake_instance.get_contents(49970642, :path => 'package.json')
fake_instance.get_contents
c
RedisConcern.client.del('node')
RedisConcern.client
JSON.parse(redis_response)
redis_response
redis_response.as_json
redis_response.to_json
redis_response
JSON.parse(redis_response)
redis_response
c
package_content['dependencies'].keys
package_content['dependencies']
package_content['devDependencies']
package_content[:devDependencies]
package_content
package_content[:dependencies]
package_content.dependencies
n
package_content = JSON.parse(Base64.decode64(package_content))
JSON.parse(Base64.decode64(package_content))
Base64.decode64(package_content)
package_content
c
client.contents(repo_id)
client.contents(repo_id, :path => file_name)
client.contents(repo_id, file_name)
client.search(repo_id, file_name)
repo_id
file_name
client
c
render :json => { msg: response }, :status => 200
c
render :json => { msg: response }, :status => 200
format.js { render :json => { msg: response }, :status => 200 }
format.js { render :status => 400 }
format.js { render :json => { msg: response }, :status => 200 }
render :json => { msg: response }
